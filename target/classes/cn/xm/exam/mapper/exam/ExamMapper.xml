<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.exam.ExamMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.exam.Exam" >
    <id column="examId" property="examid" jdbcType="VARCHAR" />
    <result column="examName" property="examname" jdbcType="VARCHAR" />
    <result column="paperId" property="paperid" jdbcType="VARCHAR" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="traincontent" property="traincontent" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="xueshi" property="xueshi" jdbcType="VARCHAR" />
    <result column="bigId" property="bigid" jdbcType="VARCHAR" />
    <result column="bigStatus" property="bigstatus" jdbcType="VARCHAR" />
    <result column="examLevel" property="examlevel" jdbcType="VARCHAR" />
    <result column="employeeName" property="employeename" jdbcType="VARCHAR" />
    <result column="employeeNum" property="employeenum" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="examType" property="examtype" jdbcType="VARCHAR" />
    <result column="AnswerTime" property="answertime" jdbcType="INTEGER" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    examId, examName, paperId, startTime, endTime, traincontent, status, xueshi, bigId, 
    bigStatus, examLevel, employeeName, employeeNum, createTime, examType, AnswerTime, 
    departmentId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.exam.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where examId = #{examid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from exam
    where examId = #{examid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.exam.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.exam.Exam" >
    insert into exam (examId, examName, paperId, 
      startTime, endTime, traincontent, 
      status, xueshi, bigId, 
      bigStatus, examLevel, employeeName, 
      employeeNum, createTime, examType, 
      AnswerTime, departmentId)
    values (#{examid,jdbcType=VARCHAR}, #{examname,jdbcType=VARCHAR}, #{paperid,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{traincontent,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{xueshi,jdbcType=VARCHAR}, #{bigid,jdbcType=VARCHAR}, 
      #{bigstatus,jdbcType=VARCHAR}, #{examlevel,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, 
      #{employeenum,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{examtype,jdbcType=VARCHAR}, 
      #{answertime,jdbcType=INTEGER}, #{departmentid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.exam.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        examId,
      </if>
      <if test="examname != null" >
        examName,
      </if>
      <if test="paperid != null" >
        paperId,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="traincontent != null" >
        traincontent,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="xueshi != null" >
        xueshi,
      </if>
      <if test="bigid != null" >
        bigId,
      </if>
      <if test="bigstatus != null" >
        bigStatus,
      </if>
      <if test="examlevel != null" >
        examLevel,
      </if>
      <if test="employeename != null" >
        employeeName,
      </if>
      <if test="employeenum != null" >
        employeeNum,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="examtype != null" >
        examType,
      </if>
      <if test="answertime != null" >
        AnswerTime,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        #{examid,jdbcType=VARCHAR},
      </if>
      <if test="examname != null" >
        #{examname,jdbcType=VARCHAR},
      </if>
      <if test="paperid != null" >
        #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="traincontent != null" >
        #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="xueshi != null" >
        #{xueshi,jdbcType=VARCHAR},
      </if>
      <if test="bigid != null" >
        #{bigid,jdbcType=VARCHAR},
      </if>
      <if test="bigstatus != null" >
        #{bigstatus,jdbcType=VARCHAR},
      </if>
      <if test="examlevel != null" >
        #{examlevel,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="employeenum != null" >
        #{employeenum,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="examtype != null" >
        #{examtype,jdbcType=VARCHAR},
      </if>
      <if test="answertime != null" >
        #{answertime,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.exam.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.examid != null" >
        examId = #{record.examid,jdbcType=VARCHAR},
      </if>
      <if test="record.examname != null" >
        examName = #{record.examname,jdbcType=VARCHAR},
      </if>
      <if test="record.paperid != null" >
        paperId = #{record.paperid,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.traincontent != null" >
        traincontent = #{record.traincontent,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.xueshi != null" >
        xueshi = #{record.xueshi,jdbcType=VARCHAR},
      </if>
      <if test="record.bigid != null" >
        bigId = #{record.bigid,jdbcType=VARCHAR},
      </if>
      <if test="record.bigstatus != null" >
        bigStatus = #{record.bigstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.examlevel != null" >
        examLevel = #{record.examlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeeName = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.employeenum != null" >
        employeeNum = #{record.employeenum,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examtype != null" >
        examType = #{record.examtype,jdbcType=VARCHAR},
      </if>
      <if test="record.answertime != null" >
        AnswerTime = #{record.answertime,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set examId = #{record.examid,jdbcType=VARCHAR},
      examName = #{record.examname,jdbcType=VARCHAR},
      paperId = #{record.paperid,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      traincontent = #{record.traincontent,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      xueshi = #{record.xueshi,jdbcType=VARCHAR},
      bigId = #{record.bigid,jdbcType=VARCHAR},
      bigStatus = #{record.bigstatus,jdbcType=VARCHAR},
      examLevel = #{record.examlevel,jdbcType=VARCHAR},
      employeeName = #{record.employeename,jdbcType=VARCHAR},
      employeeNum = #{record.employeenum,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      examType = #{record.examtype,jdbcType=VARCHAR},
      AnswerTime = #{record.answertime,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.exam.Exam" >
    update exam
    <set >
      <if test="examname != null" >
        examName = #{examname,jdbcType=VARCHAR},
      </if>
      <if test="paperid != null" >
        paperId = #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="traincontent != null" >
        traincontent = #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="xueshi != null" >
        xueshi = #{xueshi,jdbcType=VARCHAR},
      </if>
      <if test="bigid != null" >
        bigId = #{bigid,jdbcType=VARCHAR},
      </if>
      <if test="bigstatus != null" >
        bigStatus = #{bigstatus,jdbcType=VARCHAR},
      </if>
      <if test="examlevel != null" >
        examLevel = #{examlevel,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeeName = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="employeenum != null" >
        employeeNum = #{employeenum,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="examtype != null" >
        examType = #{examtype,jdbcType=VARCHAR},
      </if>
      <if test="answertime != null" >
        AnswerTime = #{answertime,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=VARCHAR},
      </if>
    </set>
    where examId = #{examid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.exam.Exam" >
    update exam
    set examName = #{examname,jdbcType=VARCHAR},
      paperId = #{paperid,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      traincontent = #{traincontent,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      xueshi = #{xueshi,jdbcType=VARCHAR},
      bigId = #{bigid,jdbcType=VARCHAR},
      bigStatus = #{bigstatus,jdbcType=VARCHAR},
      examLevel = #{examlevel,jdbcType=VARCHAR},
      employeeName = #{employeename,jdbcType=VARCHAR},
      employeeNum = #{employeenum,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      examType = #{examtype,jdbcType=VARCHAR},
      AnswerTime = #{answertime,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=VARCHAR}
    where examId = #{examid,jdbcType=VARCHAR}
  </update>
  
  <!-- 自己手写的一个根据名字模糊查询考试   exam是扫描出来的别名 -->
  <select id="selectAllExamsByName" parameterType="string" resultType="exam">
  	select * from exam where examName like '%${name}%'
  </select>
  
</mapper>
